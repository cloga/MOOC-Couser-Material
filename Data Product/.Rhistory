rect.hclust(fit, k=3, border="red")
lib: ../../librariesNew
shiny::runApp('Documents/courses/09_DevelopingDataProducts/shiny/simplestApp')
shiny::runApp('Documents/courses/09_DevelopingDataProducts/shiny/simplestApp')
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(
name="cloga",
token="7E1D1299139138E238F6BED892CBC8D8",
secret="<SECRET>")
shinyapps::setAccountInfo(name='cloga', token='7E1D1299139138E238F6BED892CBC8D8', secret='qbG84/CJ3XAuquzhqvtjrYFlhKysvSqWQvNsQXK/')
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
lm.getMethod()
lm.showMethods()
lm.getClass()
opts <- list(
capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"));
options(RCurlOptions = opts)
devtools::install_github('rstudio/shinyapps')
opts <- list(
capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"),
ssl.verifypeer = FALSE);
options(RCurlOptions = opts)
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='cloga', token='7E1D1299139138E238F6BED892CBC8D8', secret='qbG84/CJ3XAuquzhqvtjrYFlhKysvSqWQvNsQXK/')
options(shinyapps.service_url = "http://api.shinyapps.io/v1")
shinyapps::setAccountInfo(name='cloga', token='7E1D1299139138E238F6BED892CBC8D8', secret='qbG84/CJ3XAuquzhqvtjrYFlhKysvSqWQvNsQXK/')
runApp()
runApp()
shiny::runApp('Documents/Data Product')
setwd("~/Documents/Data Product")
runApp()
deployApp(appName="Binomial_Distribution_Histogram")
library(shiny)
library(shinyApp)
library(shinyapps)
deployApp(appName="Binomial_Distribution_Histogram")
